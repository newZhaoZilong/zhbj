package com.shange.zhbj;

import cn.sharesdk.framework.ShareSDK;
import cn.sharesdk.onekeyshare.OnekeyShare;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.shange.zhbj.global.GlobalConstant;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebSettings.TextSize;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;

public class NewsDetailActivity extends Activity implements OnClickListener {

	protected static final String tag = "NewsDetailActivity";
	@ViewInject(R.id.ll_control)
	private LinearLayout llControl;
	@ViewInject(R.id.btn_back)
	private ImageButton btnBack;
	@ViewInject(R.id.btn_textsize)
	private ImageButton btnTextSize;
	@ViewInject(R.id.btn_share)
	private ImageButton btnShare;
	@ViewInject(R.id.btn_menu)
	private ImageButton btnMenu;
	@ViewInject(R.id.wv_news_detail)
	private WebView mWebView;
	@ViewInject(R.id.pb_loading)
	private ProgressBar pbLoading;

	@Override
	protected void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_newsdetail);	
		ViewUtils.inject(this);
		

		llControl.setVisibility(View.VISIBLE);
		btnBack.setVisibility(View.VISIBLE);
		btnMenu.setVisibility(View.GONE);
		
		btnBack.setOnClickListener(this);
		btnTextSize.setOnClickListener(this);
		btnShare.setOnClickListener(this);

		String old_url = getIntent().getExtras().getString("url");
		String[] split = old_url.split("/zhbj/");
		String new_url =  GlobalConstant.SERVER_URL+"/"+split[1];
		mWebView.loadUrl(new_url);
		WebSettings settings = mWebView.getSettings();
		settings.setBuiltInZoomControls(true);//显示缩放按钮
		settings.setUseWideViewPort(true);//支持双击缩放
		settings.setJavaScriptEnabled(true);//支持js功能,默认是false,禁用js

		mWebView.setWebViewClient(new WebViewClient(){
			//开始加载网页
			@Override
			public void onPageStarted(WebView view, String url, Bitmap favicon) {

				super.onPageStarted(view, url, favicon);

				Log.i(tag, "开始加载网页了");
				pbLoading.setVisibility(View.VISIBLE);
			}
			//网页加载结束
			@Override
			public void onPageFinished(WebView view, String url) {
				// TODO Auto-generated method stub
				super.onPageFinished(view, url);
				Log.i(tag, "网页加载结束");
				pbLoading.setVisibility(View.INVISIBLE);
			}
			//所有链接跳转会走此方法
			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {

				view.loadUrl(url);//在跳转链接时强制在当前webview中加载
				return true;
			}

		});
		//mWebView.goBack();//跳到上个页面
		//mWebView.goForward();//跳到下一个页面
		mWebView.setWebChromeClient(new WebChromeClient(){
			
			@Override
			public void onProgressChanged(WebView view, int newProgress) {
				//进度发生变化
				super.onProgressChanged(view, newProgress);
				Log.i(tag,"进度:"+newProgress);
				if(newProgress == 100){
					pbLoading.setVisibility(View.INVISIBLE);
				}
			}
			@Override
			public void onReceivedTitle(WebView view, String title) {
				//网页标题
				super.onReceivedTitle(view, title);
				Log.i(tag,"网页标题"+title);
			}
			
		});
		
	}

	
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_back:
			
			break;
		case R.id.btn_textsize:
			//修改网页字体大小
			showChooseDialog();
			break;
		case R.id.btn_share:
			showShare();
			break;

		default:
			break;
		}
		
	}
	//private int mTempWhich;//记录临时选择的字体大小
	
	private int mCurrentWhich = 2;//记录当前选中的字体的大小(点击确定
	/**
	 * 展示选择字体大小的弹窗
	 */
	protected void showChooseDialog() {
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		
		builder.setTitle("字体设置");
		
		String[] items = new String[]{"超大号字体","大号字体","正常字体","小号字体","超小号字体"};
		
		builder.setSingleChoiceItems(items, mCurrentWhich, new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				//mTempWhich = which;
				mCurrentWhich = which;
				
			}
		});
		builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				//根据选择的字体来修改网页字体的大小
				WebSettings settings = mWebView.getSettings();
				
				switch (mCurrentWhich) {
				case 0://超大字体
					settings.setTextSize(TextSize.LARGEST);
					break;
				case 1://大字体
					settings.setTextSize(TextSize.LARGER);
					break;
				case 2://正常字体
					settings.setTextSize(TextSize.NORMAL);
					break;
				case 3://小字体
					settings.setTextSize(TextSize.SMALLER);
					break;
				case 4://最小字体
					settings.setTextSize(TextSize.SMALLEST);
					break;

				default:
					break;
				}
			//	mCurrentWhich = mTempWhich;
			}
		});
		builder.setNegativeButton("取消", null);
		builder.show();
		
	}

	private void showShare() {
		 ShareSDK.initSDK(this);
		 OnekeyShare oks = new OnekeyShare();
		 //关闭sso授权
		 oks.disableSSOWhenAuthorize(); 
		 
		// 分享时Notification的图标和文字  2.5.9以后的版本不调用此方法
		 //oks.setNotification(R.drawable.ic_launcher, getString(R.string.app_name));
		 // title标题，印象笔记、邮箱、信息、微信、人人网和QQ空间使用
		 oks.setTitle(getString(R.string.share));
		 // titleUrl是标题的网络链接，仅在人人网和QQ空间使用
		 oks.setTitleUrl("http://sharesdk.cn");
		 // text是分享文本，所有平台都需要这个字段
		 oks.setText("我是分享文本");
		 // imagePath是图片的本地路径，Linked-In以外的平台都支持此参数
		 oks.setImagePath("/sdcard/test.jpg");//确保SDcard下面存在此张图片
		 // url仅在微信（包括好友和朋友圈）中使用
		 oks.setUrl("http://sharesdk.cn");
		 // comment是我对这条分享的评论，仅在人人网和QQ空间使用
		 oks.setComment("我是测试评论文本");
		 // site是分享此内容的网站名称，仅在QQ空间使用
		 oks.setSite(getString(R.string.app_name));
		 // siteUrl是分享此内容的网站地址，仅在QQ空间使用
		 oks.setSiteUrl("http://sharesdk.cn");
		 
		// 启动分享GUI
		 oks.show(this);
		 }

}
